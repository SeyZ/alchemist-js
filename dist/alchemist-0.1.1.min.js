// Alchemist.js v0.1.1 | license: MIT
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):"object"==typeof exports?exports.Alchemist=t():e.Alchemist=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){var r=n(1),i=n(2),o=(n(3),n(4)),s=n(5),a=(n(6),n(7)),c=Object.create(a.Createable);c.init=function(e){var t=s.create();e=e||{},this.spaces=t,this.converter=o.create(t),this.white=e.white||null,this.precision=e.precision||4},c.use=function(e){if(a.isArray(e))for(var t=0;t<e.length;t++)this.use(e[t]);else{if(this[e.name]&&!this.spaces.find(e.name))throw new Error('"'+e.name+'" already exists on Alchemist and cannot be used as a plugin name');var n=r.serialize(e);this.spaces.merge(n),this.spaces.each(function(e){e.isAbstract||this.makeColorMethod(e)}.bind(this))}},c.makeColorMethod=function(e){var t=i.create(e.name,null,{white:this.white});this.spaces.each(function(e){e.isAbstract||this.makeConversionMethod(t,e.name)}.bind(this)),this[e.name]=function(e){var n,r;return n=arguments.length>1?Array.prototype.slice.call(arguments):e,r=Object.create(t),t.value=n,r}},c.makeConversionMethod=function(e,t){var n=this;e[t]=function(){var e=n.converter.convert(this,t);return a.round(e.value,n.precision)}},c.init(),e.exports=c},function(e,t,n){{var r=n(3),i=n(5);n(7)}plugins={},plugins.serialize=function(e){if(e.to||e.from)return this.serializeColorSpace(e);if(e.modifies)return this.serializeModifier(e);throw new Error("unrecognized plugin format")},plugins.serializeColorSpace=function(e){var t,n,o;if("string"!=typeof e.name)throw Error("Error: color-space plugin is missing a name");t=i.create(),n=r.create(e.name),t.add(n);for(dest_name in e.to)n.defineConvTo(dest_name,e.to[dest_name]);for(src_name in e.from)o=r.create(src_name,{"abstract":!0}),o.defineConvTo(e.name,e.from[src_name]),t.add(o);return t},plugins.serializeModifier=function(){throw new Error("Modifiers aren't implemented yet! Sorry!")},e.exports=plugins},function(e,t,n){var r=n(7),i=Object.create(r.Createable);i.init=function(e,t,n){n=n||{},this.color_space=e,this.value=t,this.white=n.white||{X:.95047,Y:1,Z:1.08883}},e.exports=i},function(e,t,n){var r=n(7),i=Object.create(r.Createable);i.init=function(e,t){var t=t||{};this.name=e,this.conversions={},this.isAbstract=t.abstract||!1},i.defineConvTo=function(e,t){if("function"!=typeof t)throw TypeError("Expected the conversion, "+t+", to be a function");this.conversions[e]=t},i.definePointerTo=function(e,t){if("string"!=typeof t)throw TypeError("Expected the pointer, "+t+", to be a string");this.conversions[e]=t},i.to=function(e){return this.conversions[e]||null},i.merge=function(e){var t=e.conversions,n=this.isAbstract&&!e.isAbstract;for(dest_space in t)if(n||!this.to(dest_space)){var r=t[dest_space];this.defineConvTo(dest_space,r)}n&&(this.isAbstract=!1)},Object.defineProperties(i,{defineConvTo:{writable:!1},to:{writable:!1}}),e.exports=i},function(e,t,n){var r=n(7),i=Object.create(r.Createable);i.init=function(e,t){this.spaces=e,this.context=t||null},i.convert=function(e,t){var n=e.color_space,r=this.spaces.find(n),i=this.spaces.find(t);if(!r)throw new Error("could not find the "+n+" color space");if(!i)throw new Error("could not find the "+t+" color space");var o=r.to(t);if("function"==typeof o)return this.applyConversion(e,t,o);if("string"==typeof o){var s=this.followPointer(e,r,o);return this.convert(s,t)}var a=this.mapConversionPath(n,t);if(a)return this.convert(e,t);throw new Error("Alchemist does not know how to convert from "+r.name+" to "+i.name)},i.applyConversion=function(e,t,n){var i;return i=r.isArray(e.value)?n.apply(this.context,r.clone(e.value).concat(e)):n(r.clone(e.value),e),i=r.round(i),e.color_space=t,e.value=i,e},i.followPointer=function(e,t,n){var r=t.to(n);if("function"!=typeof r)throw new TypeError("Expected the pointer, "+n+", to point to a function; Instead found  "+r);return this.applyConversion(e,n,r)},i.mapConversionPath=function(e,t){var n,r=this.findConversionPath(e,t);if(!r)return null;for(var i=r[t],o=r[i],s=0;100>s;){if(n=this.spaces.find(o).to(t),n&&"function"==typeof n||this.spaces.find(o).definePointerTo(t,i),o===e)return i;if(!r[o])return null;i=o,o=r[o],s++}throw new Error("something went wrong while mapping the path from"+current_space+" to "+target_space)},i.findConversionPath=function(e,t){var n=[],r=[],i={};for(n.push(e),r.push(e);n.length;){var o=n.pop();if(o===t)return i;for(var s=this.spaces.findNeighbors(o),a=0;a<s.length;a++){var c=s[a];-1===r.indexOf(c)&&(i[c]=o,r.push(c),n.push(c))}}return null},e.exports=i},function(e,t,n){var r=(n(3),n(7)),i=Object.create(r.Createable);i.init=function(){this.store=[]},i.add=function(e){this.store.push(e)},i.find=function(e){var t=this.findIndex(e);return this.store[t]||null},i.findIndex=function(e){var t=this.each(function(t,n){return t.name===e?n:void 0});return t},i.findNeighbors=function(e){var t=[],n=this.find(e);if(null===n)return t;var r=n.conversions;for(target in r){var i=this.find(target);i&&!i.isAbstract&&t.push(target)}return t},i.has=function(e){var t=this.findIndex(e);return Boolean(t||0===t)},i.remove=function(e){var t=this.findIndex(e);this.store.splice(t,1)},i.each=function(e,t){return r.each.call(this,this.store,e,t)},i.merge=function(e){e.each(function(e){this.mergeColorSpace(e)}.bind(this))},i.mergeColorSpace=function(e){var t=e.name;local_space=this.find(t),local_space?local_space.merge(e):this.add(e)},e.exports=i},function(e){var t={};e.exports=t},function(e,t){t.clone=function n(e){"use strict";var t,r=Object(e);switch(r.constructor){case String:t=r.toString();break;case Number:t=Number(r);break;case Array:t=[],this.each(r,function(e,r){t[r]=n(e)});break;default:throw new TypeError("Alchemist does not know how to clone "+e)}return t},t.isArray=function(e){return Array.isArray(e)},t.each=function(e,t,n){var r,i=e.length;n=n||null;for(var o=0;i>o;o++)if(r=t.call(n,e[o],o),void 0!=r)return r;return null},t.round=function(e,n){if(n=n||4,t.isArray(e))for(var r=0;r<e.length;r++)e[r]=this.roundIfNumber(e[r],n);else e=this.roundIfNumber(e,n);return e},t.roundIfNumber=function(e,t){return"number"==typeof e&&(e=Number(e.toFixed(t))),e},t.Createable={create:function(){var e=Object.create(this);return e.init&&e.init.apply(e,arguments),e}}}])});